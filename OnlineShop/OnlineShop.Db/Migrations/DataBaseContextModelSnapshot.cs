// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Db;

#nullable disable

namespace OnlineShop.Db.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OnlineShop.Db.Models.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.DanceFloor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TimeId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.ToTable("DanceFloors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3193a35-ca5b-4957-be39-4dc17707b158"),
                            Cost = 1100m,
                            Description = "Площадь - 110 м2, Полы - Паркет, Зеркала, Звук",
                            ImagePath = "/images/image1.jpg",
                            Name = "Сальса",
                            TimeId = new Guid("451db315-897e-4490-acd8-21ad433b02a1")
                        },
                        new
                        {
                            Id = new Guid("444545c4-8aad-47a7-b8a5-f26f5c4ebddc"),
                            Cost = 700m,
                            Description = "Площадь - 60 м2, Полы - Ламинат, Зеркала, Звук",
                            ImagePath = "/images/image1.jpg",
                            Name = "Море",
                            TimeId = new Guid("e2c0c7d1-f496-4a71-835f-3daafab0c757")
                        },
                        new
                        {
                            Id = new Guid("350f2451-4b55-41d9-a704-bb0b4fbec04d"),
                            Cost = 550m,
                            Description = "Площадь - 30 м2, Полы - Ламинат, Зеркала, Звук",
                            ImagePath = "/images/image1.jpg",
                            Name = "Малый",
                            TimeId = new Guid("f7fecfb0-f472-4951-9978-0ffc58cba3a6")
                        });
                });

            modelBuilder.Entity("OnlineShop.Db.Models.FavouriteDanceFloor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DanceFloorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("userId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DanceFloorId");

                    b.ToTable("FavouriteDanceFloors");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("CartId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DanceFloorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("OrderId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("OrderedTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("DanceFloorId");

                    b.HasIndex("OrderId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("DeliveryInfoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryInfoId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Time", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("SelectedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SelectedTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Time");

                    b.HasData(
                        new
                        {
                            Id = new Guid("451db315-897e-4490-acd8-21ad433b02a1"),
                            SelectedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SelectedTime = 0
                        },
                        new
                        {
                            Id = new Guid("e2c0c7d1-f496-4a71-835f-3daafab0c757"),
                            SelectedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SelectedTime = 0
                        },
                        new
                        {
                            Id = new Guid("f7fecfb0-f472-4951-9978-0ffc58cba3a6"),
                            SelectedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SelectedTime = 0
                        });
                });

            modelBuilder.Entity("OnlineShop.Db.Models.UserDeliveryInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserDeliveryInfo");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.DanceFloor", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.Time", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Time");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.FavouriteDanceFloor", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.DanceFloor", "DanceFloor")
                        .WithMany()
                        .HasForeignKey("DanceFloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanceFloor");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Item", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.Cart", null)
                        .WithMany("Items")
                        .HasForeignKey("CartId");

                    b.HasOne("OnlineShop.Db.Models.DanceFloor", "DanceFloor")
                        .WithMany()
                        .HasForeignKey("DanceFloorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShop.Db.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.Navigation("DanceFloor");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Order", b =>
                {
                    b.HasOne("OnlineShop.Db.Models.UserDeliveryInfo", "DeliveryInfo")
                        .WithMany()
                        .HasForeignKey("DeliveryInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeliveryInfo");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("OnlineShop.Db.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
